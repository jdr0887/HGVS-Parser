package org.renci.hgvs.model.dna;

import java.util.Arrays;
import java.util.List;

/**
 * http://www.hgvs.org/mutnomen/examplesDNA.html
 * 
 * @author jdr0887
 */
public enum DNAChangeType {

    SUBSTITUTION(Arrays.asList(String.format("(%s|%s)(.)>(.)", "\\*?-?\\d+", "\\*?-?\\d+_?\\+?\\*?-?\\d+"))),

    DELETION(Arrays.asList(String.format("(%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s)del([A-Z]+|\\d+)?",
            "[\\*|-]?\\d+", "[\\*|-]?\\d+_[\\+|\\*|-]?\\d+", "[\\*|-]?\\d+[\\+|-]\\d+", "\\d+[-|\\+]?\\d+_\\d+", "-?\\d+_\\d+[-|\\+]?\\d+",
            "\\*?-?\\d+[-|\\+]?\\d+_-?\\*?\\d+?[-|\\+]?\\d+", "-?\\d+-?\\??_\\*?-?\\d+\\+?\\??", "\\d+-?\\+?\\d+_\\*\\(\\d+_\\d+\\)",
            "\\*?\\(.+\\)_\\*?\\(.+\\)", "(.+)-\\d+_\\d+\\+\\d+", "(.+)-\\d+_(.+)-\\d+", "(.+)_-?\\d+-?\\+?\\d+",
            "\\(.+\\)-[\\d|\\?]+_\\(.+\\)[-|\\+]?\\d+", "[\\d|\\?]+-[\\d|\\?]+_\\(.+\\)", "\\(.+\\)[-|\\+][\\d|\\?]+_\\(.+\\)",
            "\\(.+\\)[-|\\+][\\d|\\?]+_\\(.+\\)[-|\\+]\\d+", "\\(\\d+_\\d+\\)", "\\(.+\\)-\\d+_\\*?\\(.+\\)", "\\d+_\\(.+\\)",
            "\\(.+\\)_\\-?\\d+\\+\\?", "\\?-\\d+_\\d+\\+\\?", "\\d+[-|\\+][\\?|\\d+]_[\\*|-]\\(.+\\)"))),

    DUPLICATION(Arrays.asList(String.format("(%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s)dup(.+)?", "[\\*|-]?\\d+", "[\\*|-]?\\d+[\\+|-]?\\d+",
            "[\\*|-]?\\d+_[\\+|\\*|-]?\\d+", "[\\*|-]?[\\d|\\?]+[\\+|-]?[\\d|\\?]+_[\\*|-]?[\\d|\\?]+[\\+|-][\\d|\\?]+",
            "[\\*|-]?\\d+[\\+|-]?\\d+_[\\*|-]?\\d+", "[\\*|-]?\\d+[-|\\+|]?\\??\\d+_[\\*|-]?\\d+[-|\\+]?\\??\\d+", "\\(.+\\)_\\(.+\\)",
            "\\(.+\\)-\\d+_\\(.+\\)", "-?\\d+[-|\\+]?\\d+_\\d+", "\\d+-[\\?|\\d+]", "\\(.+\\)_\\d+\\+\\?",
            "\\d+[-|\\+][\\?|\\d+]_[\\*|-]\\(.+\\)"))),

    REPEATED(Arrays.asList(String.format("(%s|%s|%s|%s)([A-Z])?\\[(\\d+)\\]", "\\*?-?\\d+", "[-|\\*]?\\d+_?[-|\\+|\\*]?\\d+",
            "\\d+[-|\\+]?\\d+_\\d+[-|\\+]?\\d+", "-?\\d+_-?\\d+"))),

    INSERTION(Arrays
            .asList(String.format("(%s|%s|%s)ins(.+)", "[\\*|-]?\\d+", "\\*?-?\\d+_?\\+?\\*?-?\\d+", "\\d+-?\\+?\\d+_\\d+-?\\+?\\d+"))),

    INVERSION(Arrays.asList(String.format("(%s|%s|%s)inv(.+)?", "\\*?-?\\d+_?\\+?\\*?-?\\d+", "\\d+[-|\\+]\\d+_\\d+[-|\\+]\\d+",
            "\\d+[-|\\+][\\d+|\\?]_\\*\\(.+\\)"))),

    COMPLEX(Arrays.asList(String.format("(%s|%s|%s|%s|%s|%s|%s)del(.+)?ins(.+)", "[\\*|-]?\\d+", "[\\*|-]?\\d+[\\+|-]\\d+?",
            "[\\*|-]?\\d+_[\\+|\\*|-]?\\d+", "[\\*|-]?\\d+_[\\+|\\*|-]?\\d+", "-?\\d+[-|\\+]?\\d+_-?\\d+[-|\\+]?\\d+",
            "\\d+[\\+|-]\\d+_\\*?\\d+", "\\d+_\\d+\\+\\d+"))),

    MOSAICISM(Arrays.asList(String.format("(%s|%s|%s)(.+)=/?(\\d+)?(.)?>?(.)?", "\\*?-?\\d+", "-?\\d+-?\\+?\\d+", "\\d+_\\d+"),
            "\\[=/\\d+_\\d+del\\d+\\]")),

    CHIMERISM(Arrays.asList("=//(\\d+)?(.)>(.)"));

    private List<String> regexes;

    private DNAChangeType(List<String> regexes) {
        this.regexes = regexes;
    }

    public List<String> getRegexes() {
        return regexes;
    }

    public void setRegexes(List<String> regexes) {
        this.regexes = regexes;
    }

}
